<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        el6cDqWm1WmQPtocP7ceR0fNA/sRY6BK8RGSguCOO+4YOQcX7UTnn39+y1dddMRsAj0VX+vRtZpDDz10
        g/scfPDB2Wf6VbpvfDSBjplNoKfiw3sdNj/wwAPZNR296uu6gQ6p44uoOnro4vl0E5lNoOfa+YCVQkLX
        cspvWaNjZhPoCyeffHJ2Ybh4312lnV/XBHTRVL9xypFAJcwmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wm
        AF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wm
        AF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wm
        AF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wm
        AF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wm
        AF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wm
        AF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wm
        AF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wm
        AF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wmAF/MJgBfzCYAX8wm
        AF/MJgBfzCYAX8wmADc2Cf8DPw8iqWboqI0AAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeQAAAOUAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADlAAAAdwAAAAAAAAAAAAAAAAAAAFcAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAVQAAAAAAAAAAAAAAnwAA
        AP8AAAD/AAAAqgAAAKoAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACqAAAAqgAA
        AKoAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACqAAAA/wAAAP8AAACfAAAAAAAA
        AAAAAACqAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAA
        AKoAAAAAAAAAAAAAAKoAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AP8AAAD/AAAAqgAAAAAAAAAAAAAAqgAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA/wAAAP8AAACqAAAAAAAAAAAAAACqAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAPAAAARwAAAFUAAABVAAAAVQAAAFUAAABVAAAAVQAAAFUAAABVAAAAUgAAACkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAKoAAAAAAAAAAAAAAKoAAAD/AAAA/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAXwAAAPAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        ALMAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAAqgAAAAAAAAAAAAAAqgAAAP8AAAD/AAAAAAAA
        AAAAAAAAAAAAAAAAAFQAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAJMAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAACqAAAAAAAAAAAAAACqAAAA/wAA
        AP8AAAAAAAAAAAAAAAAAAAAAAAAAzQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA5QAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAKoAAAAAAAAAAAAA
        AKoAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAD3AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADlAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAAqgAA
        AAAAAAAAAAAAqgAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAANgAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAJQAAAAAAAAAAAAAAAAAAAAAAAAA/wAA
        AP8AAACqAAAAAAAAAAAAAACqAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAfwAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAC1AAAADQAAAAAAAAAAAAAAAAAA
        AAAAAAD/AAAA/wAAAKoAAAAAAAAAAAAAAKoAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAtQAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACrAAAAKgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAP8AAAD/AAAAqgAAAAAAAAAAAAAAqgAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAACAAAAUgAAAKIAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAEAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAACqAAAAAAAAAAAAAACqAAAA/wAAAP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKMAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACZAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAKoAAAAAAAAAAAAAAKoAAAD/AAAA/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAI0AAAD4AAAA/wAAAP8AAAD4AAAAhQAA
        AAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAAqgAAAAAAAAAAAAAAqgAA
        AP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAABDAAAASQAA
        ABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAACqAAAAAAAA
        AAAAAACqAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAA
        AKoAAAAAAAAAAAAAAKoAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AP8AAAD/AAAAqgAAAAAAAAAAAAAAqgAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA/wAAAP8AAACqAAAAAAAAAAAAAACfAAAA/wAAAP8AAACqAAAAqgAAAKoAAACqAAAAqgAA
        AKoAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACqAAAAqgAA
        AKoAAACqAAAAqgAAAKoAAAD/AAAA/wAAAJ8AAAAAAAAAAAAAAFgAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAVgAAAAAAAAAAAAAAAAAAAHsAAADmAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA5gAAAHkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////////////8AAAAOAAAABgAAAAY////GP///xj///8Y/A
        A/GPgADxjwAA8Y8AAPGPAADxjwAA8Y8AAPGPAAPxj4AH8Y/wD/GP8A/xj/w/8Y////GP///xj///8YAA
        AAGAAAABwAAAA/////////////////////8=
</value>
  </data>
</root>